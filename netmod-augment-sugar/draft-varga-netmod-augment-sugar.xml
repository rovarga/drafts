<?xml version="1.0" encoding="US-ASCII"?>
<!-- vi: set smarttab sw=4 tabstop=4: -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="yes"?>
<rfc category="std" docName="draft-varga-netmod-augment-sugar-00" ipr="trust200902">
    <front>
        <title abbrev="Augment Grouping">
            YANG Extension for augmenting groupings
        </title>

        <author fullname="Robert Varga" initials="R." surname="Varga">
            <organization>Pantheon Technologies SRO</organization>
            <address>
                <postal>
                    <street>Mlynske Nivy 56</street>
                    <city>Bratislava</city>
                    <code>821 05</code>
                    <country>Slovakia</country>
                </postal>
                <email>robert.varga@pantheon.sk</email>
            </address>
        </author>

        <date day="3" month="February" year="2016" />

        <workgroup>NETMOD Working Group</workgroup>

        <abstract>
            <t>
                This document defines a new extension to YANG modeling language. Its purpose
                is to make it easier to augment all instantiations of a particular grouping
                across the system.
            </t>
        </abstract>

        <note title="Requirements Language">
            <t>
                The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                document are to be interpreted as described in <xref target="RFC2119"/>.
            </t>
        </note>
    </front>

    <middle>
        <section title="Introduction">
            <t>
                The YANG modeling language <xref target="RFC6020"/> has the augment mechanics
                by which an external module can introduce new structures into data tree defined
                by a base model. It also defines groupings, which act as collections of related
                structures and can be instantiated in multiple places in the data tree without
                resorting to copying the same definition.
            </t>

            <t>
                Augmentations may target only instantiated data, which means that a model which
                wants to enrich a particular grouping has to enumerate every location where that
                particular grouping has been instantiated. As the number of models using the
                grouping grows, the augmenting model needs to import all of them and have
                essentially the same declaration for each instantiation, increasing coupling and
                leading to exactly the problem which groupings are supposed to prevent.
            </t>

            <t>
                This document proposes a language extension which allows designers to attach an
                a set of augment statements to the grouping definition, such that the contents
                of these augments become effective at each place where that grouping is
                instantiated.
            </t>
        </section>

        <section title="Terminology">
            <t>
                This document uses the following terms defined in <xref target="RFC6020"/>:
                <list style="symbols">
                    <t>grouping</t>
                    <t>augmentation</t>
                </list>
            </t>
        </section>

        <section anchor="Motivation" title="Motivation">
            <t>
                YANG has been designed with the assumption that the system serving YANG-modeled
                data is a tightly-coupled pre-integrated system. If the server is realized as
                a loosely-coupled system, with a large number of independent component, the
                data model designers need to make sure they introduce types and groupings in
                a manner that does not introduce artificial dependencies.
            </t>
            <t>
                Such design leads to creation of two classes of models. The first one defines
                domain-specific types and groupings, which express the properties of objects
                found in a particular domain. The second one then binds these objects to
                individual use cases and applications solving specific problems.
            </t>
            <t>
                Decomposing the system in this way works well as long as the domain-specific
                groupings are not being extended. This is rarely the case, for example if the
                data being modeled are protocol datagrams, such as BGP messages.
            </t>
            <t>
                The process of defining such an extension is two-step process. The first step
                creates the data model to holds new data types and groupings. The second step
                binds these to the actual applications, which can be realized in three ways:
                <list>
                    <t>
                        Update application models to import the extension and bind the data
                        explicitly. This approach makes the application depend on the extension
                        and requires revision of application models as new extension are
                        defined.
                    </t>
                    <t>
                        Include augmentations to application models in the extension model.
                        This approach makes the extension depend on all applications known
                        at the time the extension was defined.
                    </t>
                    <t>
                        Create per-application models to bind the extension to each application.
                        This approach leads to combinatorial increase in the number of models
                        in the system.
                    </t>
                </list>
            </t>
            <t>
                This process could be simplified if the model designers had a tool, which would
                allow them to declare augmentations which should apply to all instantiations
                of a particular grouping. If such a mechanism existed, it would be used in the
                base extension model and augmentations would be propagated to individual grouping
                instantiations by the YANG compiler when it processed the application-specific
                models.
            </t>
        </section>

        <section anchor="Extension" title="augment-grouping Extension Statement">
            <t>


            </t>
        </section>

        <section anchor="Feature" title="augment-grouping Feature">
            <t>


            </t>
        </section>

        <section anchor="yang" title="YANG module for augment-grouping Extension">
            <t>
                The following YANG module defines the language extension and the corresponding server
                feature.
            </t>
            <figure>
                <artwork type="yang">
                <![CDATA[
<CODE BEGINS> file "ietf-augment-grouping@2015-02-03.yang"

module ietf-augment-grouping {
    yang-version 1;
    namespace "urn:ietf:params:xml:ns:yang:ietf-grpaug";
    prefix ag;

    organization
        "IETF NETMOD (NETCONF Data Modeling Language) Working Group";

    contact
        "WG Web:   <http://tools.ietf.org/wg/netmod/>
        WG List:  <mailto:netmod@ietf.org>

        WG Chair: Thomas Nadeau
                  <mailto:tnadeau@lucidvision.com>

        WG Chair: Juergen Schoenwaelder
                  <mailto:j.schoenwaelder@jacobs-university.de>

        WG Chair: Kent Watsen
                  <mailto:kwatsen@juniper.net>

        Editor:   Robert Varga
                  <mailto:robert.varga@pantheon.sk>";

    description
        "This module defines augment-grouping, a YANG language extension
         for attaching augment statements to a grouping definition.

         Copyright (c) 2015 IETF Trust and the persons identified as
         authors of the code. All rights reserved.
 
         Redistribution and use in source and binary forms, with or
         without modification, is permitted pursuant to, and subject to
         the license terms contained in, the Simplified BSD License set
         forth in Section 4.c of the IETF Trust's Legal Provisions
         Relating to IETF Documents
         (http://trustee.ietf.org/license-info).
 
         The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
         NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY', and
         'OPTIONAL' in the module text are to be interpreted as described
         in RFC 2119 (http://tools.ietf.org/html/rfc2119).
 
         This version of this YANG module is part of RFC XXXX
         (http://tools.ietf.org/html/rfcXXXX); see the RFC itself for
         full legal notices."

    revision 2016-02-03 {
        description
            "Initial revision.";
        reference
            "RFC XXXX: YANG Extension for augmenting groupings";
    }

    extension "augment-grouping" {
        description
            "Defines a set of augment statements to be attached to the grouping
             identified by the argument. An instance of this extension can
             carry one or more augment statements, which will be applied to
             each instantiation of the target grouping.

             The argument of these augment statements must be a relative path,
             not an absolute and its target must lie within the grouping or
             augmentations introduced by other modules using this extension.

             Argument value of \".\" indicates that the container (or list)
             in which the grouping is being instantiated is to be augmented.

             All nodes introduced via this extension will have the namespace
             of the module where this extension is used, e.g. the effective
             data model is the same as if the module used explicit augment
             for every instantiation of the target grouping present known in
             the system.";
        argument "target-grouping";
        reference
            "RFC XXXX Section YY, augment-grouping Extension Statement";
    }

    feature "augment-grouping" {
        description
            "Indicates that the server supports augment-grouping extension
             and its effective data model reflects augment statement
             expansion as specified by this extension.";
        reference
            "RFC XXXX Section ZZ, augment-grouping Feature";
    }
}

<CODE ENDS>
]]>
                </artwork>
            </figure>
        </section>

        <section anchor="IANA-considerations" title="IANA considerations">
            <t>
                This document registers a URI in the "IETF XML Registry" [RFC3688].
                Following the format in RFC 3688, the following registration has been
                made.
                <list style="hanging">
                    <t hangText="URI:">urn:ietf:params:xml:ns:yang:ietf-grpaug</t>
                    <t hangText="Registrant Contact:">The IESG.</t>
                    <t hangText="XML:">N/A, the requested URI is an XML namespace.</t>
                </list>
            </t>
            <t>
                This document registers a YANG module in the "YANG Module Names"
                registry [RFC6020].
                <list style="hanging">
                    <t hangText="name:">ietf-augment-grouping</t>
                    <t hangText="namespace:">urn:ietf:params:xml:ns:yang:ietf-grpaug</t>
                    <t hangText="prefix:">ag</t>
                    <t hangText="reference:">RFC XXXX</t>
                </list>
            </t>
        </section> 

        <section anchor="Security" title="Security Considerations">
            <t>
                This document defines YANG data modeling extension. The extension itself
                does have no security impact on the Internet, but the usage of this 
                extension in concrete YANG modules might have.  The security considerations
                spelled out in the YANG specification [RFC6020] apply for this document as well.
            </t>
        </section>

        <section anchor="Acknowledgements" title="Acknowledgements">
            <t>
                The author would like to thank Anton Tkacik, Miroslav Miklus and Stefan Kobza for
                their contributions to this document.
            </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6022.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6242.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-exi-20110310.xml"?>
        </references>
    </back>
</rfc>

